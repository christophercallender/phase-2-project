{"ast":null,"code":"var _jsxFileName = \"/Users/christophercallender/Library/Mobile Documents/com~apple~CloudDocs/Development/phase 2/phase-2-project/src/context.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateContext = /*#__PURE__*/createContext();\n\nfunction StateProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [search, setSearch] = useState('');\n  const [mode, setMode] = useState('light');\n  const [rerender, setRerender] = useState(false);\n\n  function handleHeart(product) {\n    fetch(`http://localhost:3000/products/${product.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        heart: !product.heart\n      })\n    }).then(setRerender(!rerender));\n  }\n\n  function handleAddToCart(product) {\n    fetch(`http://localhost:3000/products/${product.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        inCart: !product.inCart\n      })\n    }).then(setRerender(!rerender));\n  } // function CardCol() {\n  //    return (\n  //       <Col key={product.id}>\n  //          <Card style={{ width: '18rem', padding: '10px' }}>\n  //             <Card.Img\n  //                src={product.image}\n  //                alt={product.title + product.model}\n  //             />\n  //             <br />\n  //             <Container className=\"d-flex justify-content-between\">\n  //                <Card.Title>{product.title}</Card.Title>\n  //                <Card.Text>{product.model}</Card.Text>\n  //                <Card.Text\n  //                   style={{ cursor: 'pointer' }}\n  //                   onClick={() => handleHeart(product)}\n  //                >\n  //                   {product.heart ? '♥' : '♡'}\n  //                </Card.Text>\n  //             </Container>\n  //             <Container className=\"d-flex justify-content-between\">\n  //                <Card.Text>{product.price}</Card.Text>\n  //                <Button\n  //                   variant={\n  //                      product.inCart ? 'secondary' : 'outline-secondary'\n  //                   }\n  //                   onClick={() => handleAddToCart(product)}\n  //                >\n  //                   {product.inCart ? 'In Cart' : 'Add to Cart'}\n  //                </Button>\n  //             </Container>\n  //          </Card>\n  //          <br />\n  //       </Col>\n  //    );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: {\n      search,\n      setSearch,\n      mode,\n      setMode,\n      handleHeart,\n      handleAddToCart,\n      rerender,\n      setRerender // CardCol,\n\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}\n\n_s(StateProvider, \"pNSVMnZo2k60ZzIgelKa6omEFgw=\");\n\n_c = StateProvider;\nexport { StateContext, StateProvider }; //<SearchContext.Provider value={{ search, setSearch, optionalFunction }}>\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"names":["useState","createContext","StateContext","StateProvider","children","search","setSearch","mode","setMode","rerender","setRerender","handleHeart","product","fetch","id","method","headers","body","JSON","stringify","heart","then","handleAddToCart","inCart"],"sources":["/Users/christophercallender/Library/Mobile Documents/com~apple~CloudDocs/Development/phase 2/phase-2-project/src/context.js"],"sourcesContent":["import { useState, createContext } from 'react';\n\nconst StateContext = createContext();\n\nfunction StateProvider({ children }) {\n   const [search, setSearch] = useState('');\n   const [mode, setMode] = useState('light');\n   const [rerender, setRerender] = useState(false);\n\n   function handleHeart(product) {\n      fetch(`http://localhost:3000/products/${product.id}`, {\n         method: 'PATCH',\n         headers: {\n            'Content-Type': 'application/json',\n         },\n         body: JSON.stringify({\n            heart: !product.heart,\n         }),\n      }).then(setRerender(!rerender));\n   }\n\n   function handleAddToCart(product) {\n      fetch(`http://localhost:3000/products/${product.id}`, {\n         method: 'PATCH',\n         headers: {\n            'Content-Type': 'application/json',\n         },\n         body: JSON.stringify({\n            inCart: !product.inCart,\n         }),\n      }).then(setRerender(!rerender));\n   }\n\n   // function CardCol() {\n   //    return (\n   //       <Col key={product.id}>\n   //          <Card style={{ width: '18rem', padding: '10px' }}>\n   //             <Card.Img\n   //                src={product.image}\n   //                alt={product.title + product.model}\n   //             />\n   //             <br />\n   //             <Container className=\"d-flex justify-content-between\">\n   //                <Card.Title>{product.title}</Card.Title>\n   //                <Card.Text>{product.model}</Card.Text>\n   //                <Card.Text\n   //                   style={{ cursor: 'pointer' }}\n   //                   onClick={() => handleHeart(product)}\n   //                >\n   //                   {product.heart ? '♥' : '♡'}\n   //                </Card.Text>\n   //             </Container>\n   //             <Container className=\"d-flex justify-content-between\">\n   //                <Card.Text>{product.price}</Card.Text>\n   //                <Button\n   //                   variant={\n   //                      product.inCart ? 'secondary' : 'outline-secondary'\n   //                   }\n   //                   onClick={() => handleAddToCart(product)}\n   //                >\n   //                   {product.inCart ? 'In Cart' : 'Add to Cart'}\n   //                </Button>\n   //             </Container>\n   //          </Card>\n   //          <br />\n   //       </Col>\n   //    );\n   // }\n\n   return (\n      <StateContext.Provider\n         value={{\n            search,\n            setSearch,\n            mode,\n            setMode,\n            handleHeart,\n            handleAddToCart,\n            rerender,\n            setRerender,\n            // CardCol,\n         }}\n      >\n         {children}\n      </StateContext.Provider>\n   );\n}\n\nexport { StateContext, StateProvider };\n\n//<SearchContext.Provider value={{ search, setSearch, optionalFunction }}>\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,QAAwC,OAAxC;;AAEA,MAAMC,YAAY,gBAAGD,aAAa,EAAlC;;AAEA,SAASE,aAAT,OAAqC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAClC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,OAAD,CAAhC;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;EAEA,SAASW,WAAT,CAAqBC,OAArB,EAA8B;IAC3BC,KAAK,CAAE,kCAAiCD,OAAO,CAACE,EAAG,EAA9C,EAAiD;MACnDC,MAAM,EAAE,OAD2C;MAEnDC,OAAO,EAAE;QACN,gBAAgB;MADV,CAF0C;MAKnDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAClBC,KAAK,EAAE,CAACR,OAAO,CAACQ;MADE,CAAf;IAL6C,CAAjD,CAAL,CAQGC,IARH,CAQQX,WAAW,CAAC,CAACD,QAAF,CARnB;EASF;;EAED,SAASa,eAAT,CAAyBV,OAAzB,EAAkC;IAC/BC,KAAK,CAAE,kCAAiCD,OAAO,CAACE,EAAG,EAA9C,EAAiD;MACnDC,MAAM,EAAE,OAD2C;MAEnDC,OAAO,EAAE;QACN,gBAAgB;MADV,CAF0C;MAKnDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAClBI,MAAM,EAAE,CAACX,OAAO,CAACW;MADC,CAAf;IAL6C,CAAjD,CAAL,CAQGF,IARH,CAQQX,WAAW,CAAC,CAACD,QAAF,CARnB;EASF,CA3BiC,CA6BlC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACG,QAAC,YAAD,CAAc,QAAd;IACG,KAAK,EAAE;MACJJ,MADI;MAEJC,SAFI;MAGJC,IAHI;MAIJC,OAJI;MAKJG,WALI;MAMJW,eANI;MAOJb,QAPI;MAQJC,WARI,CASJ;;IATI,CADV;IAAA,UAaIN;EAbJ;IAAA;IAAA;IAAA;EAAA,QADH;AAiBF;;GAlFQD,a;;KAAAA,a;AAoFT,SAASD,YAAT,EAAuBC,aAAvB,G,CAEA"},"metadata":{},"sourceType":"module"}